{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Zoro.to API A simple wrapper for the Zoro.to API Installation # npm npm install zoro-to-api # yarn yarn add zoro-to-api Basic Usage Javascript const Zoro = require ( 'zoro-to-api' ); // Change Horimiya to whatever you want to search for let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ) // Get the first result let horimiya = zoroResults [ 0 ] // Get the info for the first result let info = Zoro . getAnimeInfoByName ( horimiya . eng_title ); // Get the episodes for the first result let eps = Zoro . getEpList ( horimiya . eng_title ); // Get the first episode let firstEpisode = eps . episodes [ 0 ]; // Get the servers for the first episode let servers = Zoro . getEpisodeServers ( firstEpisode . epId ); // Choose out of 4 servers let subbed = servers . serversSub [ 0 ] // Get the stream server let streamServer = Zoro . getStreamsById ( subbed . serverId ); // Your iframe link console . log ( streamServer . link ) //* \u26a0 Make sure you read the docs for the functions you use Typescript import Zoro from 'zoro-to-api' ; ... Contributing Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Make sure to update tests as appropriate. License MIT","title":"Home"},{"location":"#zoroto-api","text":"A simple wrapper for the Zoro.to API","title":"Zoro.to API"},{"location":"#installation","text":"# npm npm install zoro-to-api # yarn yarn add zoro-to-api","title":"Installation"},{"location":"#basic-usage","text":"","title":"Basic Usage"},{"location":"#javascript","text":"const Zoro = require ( 'zoro-to-api' ); // Change Horimiya to whatever you want to search for let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ) // Get the first result let horimiya = zoroResults [ 0 ] // Get the info for the first result let info = Zoro . getAnimeInfoByName ( horimiya . eng_title ); // Get the episodes for the first result let eps = Zoro . getEpList ( horimiya . eng_title ); // Get the first episode let firstEpisode = eps . episodes [ 0 ]; // Get the servers for the first episode let servers = Zoro . getEpisodeServers ( firstEpisode . epId ); // Choose out of 4 servers let subbed = servers . serversSub [ 0 ] // Get the stream server let streamServer = Zoro . getStreamsById ( subbed . serverId ); // Your iframe link console . log ( streamServer . link ) //* \u26a0 Make sure you read the docs for the functions you use","title":"Javascript"},{"location":"#typescript","text":"import Zoro from 'zoro-to-api' ; ...","title":"Typescript"},{"location":"#contributing","text":"Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Make sure to update tests as appropriate.","title":"Contributing"},{"location":"#license","text":"MIT","title":"License"},{"location":"note/","text":"Note I couldnt find any API request for getting anime info, So its not possible to get anime info from zoro.to with this package. Anilist is the only way to get anime info.","title":"Note"},{"location":"note/#note","text":"I couldnt find any API request for getting anime info, So its not possible to get anime info from zoro.to with this package. Anilist is the only way to get anime info.","title":"Note"},{"location":"api/Anime%20Info/","text":"Anime Info Get information about an anime (Uses Anilist API, here Usage Zoro.getAnimeInfoByName('<Anime Name>') Example let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let info = await Zoro . getAnimeInfoByName ( firstResult . eng_title ); // Getting the info of the first result Returns An Anime Entry Object { episodes : number , season : MediaSeason , seasonYear : number , duration : number , source : MediaSource , } Note Sometimes Anilist API might give invalid data, so it's recommended to check if the data is valid before using it.","title":"Anime Info"},{"location":"api/Anime%20Info/#anime-info","text":"Get information about an anime (Uses Anilist API, here","title":"Anime Info"},{"location":"api/Anime%20Info/#usage","text":"Zoro.getAnimeInfoByName('<Anime Name>')","title":"Usage"},{"location":"api/Anime%20Info/#example","text":"let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let info = await Zoro . getAnimeInfoByName ( firstResult . eng_title ); // Getting the info of the first result","title":"Example"},{"location":"api/Anime%20Info/#returns","text":"An Anime Entry Object { episodes : number , season : MediaSeason , seasonYear : number , duration : number , source : MediaSource , } Note Sometimes Anilist API might give invalid data, so it's recommended to check if the data is valid before using it.","title":"Returns"},{"location":"api/Episode%20List/","text":"Episode List Gets list of episodes Usage Zoro.getEpList('<Zoro.to Anime id>') Example let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let episodes = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result Returns A Object with episodes and total episodes { totalEps : number ; episodes : [ { name : string ; epNum : string ; epId : string ; } ... ] }","title":"Episode List"},{"location":"api/Episode%20List/#episode-list","text":"Gets list of episodes","title":"Episode List"},{"location":"api/Episode%20List/#usage","text":"Zoro.getEpList('<Zoro.to Anime id>')","title":"Usage"},{"location":"api/Episode%20List/#example","text":"let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let episodes = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result","title":"Example"},{"location":"api/Episode%20List/#returns","text":"A Object with episodes and total episodes { totalEps : number ; episodes : [ { name : string ; epNum : string ; epId : string ; } ... ] }","title":"Returns"},{"location":"api/Episode%20Server/","text":"Episode Servers Gives list of servers for an episode (Sub and Dub) Usage Zoro.getEpisodeServers('<episode ID>') Example let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let { episodes } = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result let firstEp = episodes [ 0 ]; // Getting the first episode let servers = await Zoro . getEpisodeServers ( firstEp . epId ); // Servers of the first episode Returns An Object with Sub and Dub servers { serversSub : { type : string ; server : string ; serverId : string ; serverId2 : string ; devNote? : string ; } serversDub : { ... } } READ THIS FIRST Make sure you read devNote if it's available, it might contain important information about the server. The Rapid Stream server only works when the referrer of iframe is zoro.to . It's Recommended to use StreamSB servers","title":"Episode Servers"},{"location":"api/Episode%20Server/#episode-servers","text":"Gives list of servers for an episode (Sub and Dub)","title":"Episode Servers"},{"location":"api/Episode%20Server/#usage","text":"Zoro.getEpisodeServers('<episode ID>')","title":"Usage"},{"location":"api/Episode%20Server/#example","text":"let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let { episodes } = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result let firstEp = episodes [ 0 ]; // Getting the first episode let servers = await Zoro . getEpisodeServers ( firstEp . epId ); // Servers of the first episode","title":"Example"},{"location":"api/Episode%20Server/#returns","text":"An Object with Sub and Dub servers { serversSub : { type : string ; server : string ; serverId : string ; serverId2 : string ; devNote? : string ; } serversDub : { ... } } READ THIS FIRST Make sure you read devNote if it's available, it might contain important information about the server. The Rapid Stream server only works when the referrer of iframe is zoro.to . It's Recommended to use StreamSB servers","title":"Returns"},{"location":"api/Episode%20Stream/","text":"Episode Stream Gives iframe embed URL for an episode Usage Zoro.getStreamsById('<Episode Server ID>') Example let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let { episodes } = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result let firstEp = episodes [ 0 ]; // Getting the first episode let servers = await Zoro . getEpisodeServers ( firstEp . epId ); // Servers of the first episode let iframedata = await Zoro . getStreamsById ( servers . serversSub [ 0 ]. serverId ); // Getting the iframe embed URL console . log ( iframedata . link ); // Logging the iframe embed URL Returns An Object with iframe embed URL { type : string ; link : string ; server : number ; sources : []; tracks : []; htmlGuide : string ; }","title":"Episode Stream"},{"location":"api/Episode%20Stream/#episode-stream","text":"Gives iframe embed URL for an episode","title":"Episode Stream"},{"location":"api/Episode%20Stream/#usage","text":"Zoro.getStreamsById('<Episode Server ID>')","title":"Usage"},{"location":"api/Episode%20Stream/#example","text":"let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); // Searching for Horimiya let firstResult = zoroResults [ 0 ]; // Getting the first result let { episodes } = await Zoro . getEpList ( firstResult . id ); // Episodes of the first result let firstEp = episodes [ 0 ]; // Getting the first episode let servers = await Zoro . getEpisodeServers ( firstEp . epId ); // Servers of the first episode let iframedata = await Zoro . getStreamsById ( servers . serversSub [ 0 ]. serverId ); // Getting the iframe embed URL console . log ( iframedata . link ); // Logging the iframe embed URL","title":"Example"},{"location":"api/Episode%20Stream/#returns","text":"An Object with iframe embed URL { type : string ; link : string ; server : number ; sources : []; tracks : []; htmlGuide : string ; }","title":"Returns"},{"location":"api/Zoro%20Search/","text":"Zoro Search Search for anime on Zoro.to Usage Zoro.zoroSearch('<Anime Name>') Example let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" ); Returns List of Anime Search Results [ { id : string ; poster : string ; eng_title : string ; jp_name : string ; release_date : string ; length : string ; }, ... ] Note This function will return an extra object with id as /search?ref...","title":"Zoro Search"},{"location":"api/Zoro%20Search/#zoro-search","text":"Search for anime on Zoro.to","title":"Zoro Search"},{"location":"api/Zoro%20Search/#usage","text":"Zoro.zoroSearch('<Anime Name>')","title":"Usage"},{"location":"api/Zoro%20Search/#example","text":"let zoroResults = await Zoro . zoroSearch ( \"Horimiya\" );","title":"Example"},{"location":"api/Zoro%20Search/#returns","text":"List of Anime Search Results [ { id : string ; poster : string ; eng_title : string ; jp_name : string ; release_date : string ; length : string ; }, ... ] Note This function will return an extra object with id as /search?ref...","title":"Returns"}]}